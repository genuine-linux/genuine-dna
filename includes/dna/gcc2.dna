#!/bin/bash

# Download Source Package Tarball if necessary
if [ ! -f "$SRC_DIR/mpfr-3.1.2.tar.bz2" ]; then
	echo "$WARN Package mpfr-3.1.2.tar.bz2 will be downloaded ...";
	echo "";
	wget -P $SRC_DIR/ http://www.mpfr.org/mpfr-current/mpfr-3.1.2.tar.bz2;
else
        echo "$WARN Package mpfr-3.1.2.tar.bz2 has been already downloaded.";
fi;

# Download Source Package Tarball if necessary
if [ ! -f "$SRC_DIR/gmp-6.0.0a.tar.bz2" ]; then
	echo "$WARN Package gmp-6.0.0a.tar.bz2 will be downloaded ...";
	echo "";
	wget -P $SRC_DIR/ https://gmplib.org/download/gmp/gmp-6.0.0a.tar.bz2;
else
        echo "$WARN Package gmp-6.0.0a.tar.bz2 has been already downloaded.";
fi;

# Download Source Package Tarball if necessary
if [ ! -f "$SRC_DIR/mpc-1.0.2.tar.gz" ]; then
	echo "$WARN Package mpc-1.0.2.tar.gz will be downloaded ...";
	echo "";
	wget -P $SRC_DIR/ ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.2.tar.gz;
else
        echo "$WARN Package mpc-1.0.2.tar.gz has been already downloaded.";
fi;

tar -jxf $SRC_DIR/mpfr-3.1.2.tar.bz2
mv -v mpfr-3.1.2 mpfr

tar -jxf $SRC_DIR/gmp-6.0.0a.tar.bz2
mv -v gmp-6.0.0a gmp

tar -zxf $SRC_DIR/mpc-1.0.2.tar.gz
mv -v mpc-1.0.2 mpc

cp -v gcc/Makefile.in gcc/Makefile.in.orig
sed 's@\./fixinc\.sh@-c true@' gcc/Makefile.in.orig > gcc/Makefile.in

cp -v gcc/Makefile.in gcc/Makefile.in.tmp
sed 's/^T_CFLAGS =$/& -fomit-frame-pointer/' gcc/Makefile.in.tmp \
  > gcc/Makefile.in

for file in \
 $(find gcc/config -name linux64.h -o -name linux.h -o -name sysv4.h)
do
  cp -uv $file $file.orig
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@'$TOOLBOX'&@g' \
  -e 's@/usr@'$TOOLBOX'@g' $file.orig > $file
  echo '
#undef STANDARD_INCLUDE_DIR
#define STANDARD_INCLUDE_DIR 0
#define STANDARD_STARTFILE_PREFIX_1 ""
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

case $(uname -m) in
  x86_64)
    for file in $(find gcc/config -name t-linux64) ; do \
      cp -v $file $file.orig
      sed '/MULTILIB_OSDIRNAMES/d' $file.orig > $file
    done
  ;;
esac

if [ -d "../gcc-build" ]; then
        rm -rf ../gcc-build;
fi

mkdir -v ../gcc-build
cd ../gcc-build

CC="$GENUINE_TGT-gcc -B$TOOLBOX/lib/" \
    AR=$GENUINE_TGT-ar RANLIB=$GENUINE_TGT-ranlib \
    ../$DNA_PACKAGE_VERSION/configure --prefix=$TOOLBOX \
    --host=$GENUINE_TGT --target=$GENUINE_TGT --build=$GENUINE_TGT \
    --with-local-prefix=$TOOLBOX --enable-clocale=gnu \
    --enable-shared --enable-threads=posix \
    --enable-__cxa_atexit --enable-languages=c,c++ \
    --disable-libstdcxx-pch --disable-multilib \
    --disable-bootstrap --disable-libgomp \
    --disable-libquadmath \
    --with-gmp-include=$(pwd)/gmp --with-gmp-lib=$(pwd)/gmp/.libs \
    --without-ppl --without-cloog

make

make install

ln -vs gcc $TOOLBOX/bin/cc

echo "$WARN Adjusting new ToolBox.";
echo "$WARN You should see: [Requesting program interpreter: $TOOLBOX/lib/ld-linux.so.2]";
echo 'main(){}' > dummy.c
cc dummy.c
readelf -l a.out | grep ": $TOOLBOX"
rm -v dummy.c a.out
